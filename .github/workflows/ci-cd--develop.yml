name: CI/CD
on:
    push:
        branches:
            - main
    pull_request:
        types: [synchronize]
    workflow_dispatch:
env:
    NODE_VERSION: 18.17.1
    GENERIC_LIBRARY: frontend/generic-library
    BASE_URL: ${{ secrets.BASE_URL }}

jobs:
  deploy-cmp-libraries:
    name: Deploy Component Libraries to Github Pages
    runs-on: ubuntu-latest
    steps:
      - name: "📥 checkout repository"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "🔄  Cache node_modules"
        uses: actions/cache@v3
        with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: ${{ runner.os }}-node-
      
      - name: "🔧  Setup NodeJS ${{ env.NODE_VERSION }}"
        uses: actions/setup-node@v3
        with:
            node-version: ${{ env.NODE_VERSION }}

      - name: "🔧 Install npm@latest"
        run: npm i -g npm@latest  


      - name: "📦  Install Component Library Build dependencies"
        run: |
          bash modulize -e production -m generic-library -p install

      - name: "🏗️  Build Frontend Component Library"
        run: |
          bash modulize -e production -m generic-library -p build

      - name: "🚚  Package Component Library"
        run: |
          mkdir -p package/dist
          cp -r frontend/generic-library/dist/* package/dist

      - uses: actions/upload-artifact@v3
        with:
          name: component-libraries
          path: package/dist/

      - name: "📦 Upload artifact"
        uses: actions/upload-artifact@v3
        with:
          name: dist-${{ github.sha }}
          path: package/dist

      - name: "🔧 Setup Pages"
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: './package/dist'

      - name: "🚀 Deploy to GitHub Pages"
        id: deployment
        uses: actions/deploy-pages@v2